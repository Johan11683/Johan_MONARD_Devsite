{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/monar/Documents/Formation/Projet%208/mon-cv-fighter/FRONT/utils/sendContactMessage.ts"],"sourcesContent":["export type ContactFormData = {\r\n  email: string;\r\n  subject: string;\r\n  message: string;\r\n};\r\n\r\nexport async function sendContactMessage(\r\n  data: ContactFormData\r\n): Promise<{ success: boolean; error?: string }> {\r\n  console.log(\"📤 FRONT – sendContactMessage called with: \\n\", data);\r\n  console.trace(\"🧭 FRONT – Trace de l'appel à sendContactMessage\");\r\n\r\n  try {\r\n    const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/contact`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    const result = await response.json();\r\n\r\n    if (!response.ok) {\r\n      return { success: false, error: result.error || \"Erreur serveur.\" };\r\n    }\r\n\r\n    return { success: true };\r\n  } catch (err) {\r\n    console.error(\"❌ FRONT – Erreur d'envoi :\", err);\r\n    return { success: false, error: \"Erreur lors de l'envoi du message.\" };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAMO,eAAe,mBACpB,IAAqB;IAErB,QAAQ,GAAG,CAAC,iDAAiD;IAC7D,QAAQ,KAAK,CAAC;IAEd,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,6DAAmC,YAAY,CAAC,EAAE;YAC7E,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,MAAM,SAAS,MAAM,SAAS,IAAI;QAElC,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,OAAO;gBAAE,SAAS;gBAAO,OAAO,OAAO,KAAK,IAAI;YAAkB;QACpE;QAEA,OAAO;YAAE,SAAS;QAAK;IACzB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;YAAE,SAAS;YAAO,OAAO;QAAqC;IACvE;AACF","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/monar/Documents/Formation/Projet%208/mon-cv-fighter/FRONT/hooks/useContactForm.ts"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { sendContactMessage } from \"@/utils/sendContactMessage\";\r\n\r\nexport function useContactForm() {\r\n  const { t } = useTranslation(\"common\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (isSubmitting) return;\r\n\r\n    setIsSubmitting(true);\r\n\r\n    if (!email.trim() || !subject.trim() || !message.trim()) {\r\n      setError(t(\"contactModal.errors.required\"));\r\n      setSuccessMessage(\"\");\r\n      setIsSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    if (!emailRegex.test(email)) {\r\n      setError(t(\"contactModal.errors.invalidEmail\"));\r\n      setSuccessMessage(\"\");\r\n      setIsSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    const { success, error: sendError } = await sendContactMessage({\r\n      email,\r\n      subject,\r\n      message,\r\n    });\r\n\r\n    if (success) {\r\n      setError(\"\");\r\n      setSuccessMessage(t(\"contactModal.success\"));\r\n      setEmail(\"\");\r\n      setSubject(\"\");\r\n      setMessage(\"\");\r\n    } else {\r\n      setSuccessMessage(\"\");\r\n      setError(sendError || \"Erreur inconnue\");\r\n    }\r\n\r\n    setIsSubmitting(false);\r\n  };\r\n\r\n  return {\r\n    email,\r\n    subject,\r\n    message,\r\n    setEmail,\r\n    setSubject,\r\n    setMessage,\r\n    error,\r\n    successMessage,\r\n    isSubmitting,\r\n    handleSubmit,\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AACA;;;;AAEO,SAAS;IACd,MAAM,EAAE,CAAC,EAAE,GAAG,CAAA,GAAA,gKAAA,CAAA,iBAAc,AAAD,EAAE;IAC7B,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,aAAa;IAEnB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI,cAAc;QAElB,gBAAgB;QAEhB,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,IAAI,IAAI;YACvD,SAAS,EAAE;YACX,kBAAkB;YAClB,gBAAgB;YAChB;QACF;QAEA,IAAI,CAAC,WAAW,IAAI,CAAC,QAAQ;YAC3B,SAAS,EAAE;YACX,kBAAkB;YAClB,gBAAgB;YAChB;QACF;QAEA,MAAM,EAAE,OAAO,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,CAAA,GAAA,2HAAA,CAAA,qBAAkB,AAAD,EAAE;YAC7D;YACA;YACA;QACF;QAEA,IAAI,SAAS;YACX,SAAS;YACT,kBAAkB,EAAE;YACpB,SAAS;YACT,WAAW;YACX,WAAW;QACb,OAAO;YACL,kBAAkB;YAClB,SAAS,aAAa;QACxB;QAEA,gBAAgB;IAClB;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/monar/Documents/Formation/Projet%208/mon-cv-fighter/FRONT/app/contact/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useContactForm } from \"@/hooks/useContactForm\";\r\nimport \"@/styles/contactPage.scss\";\r\n\r\nexport default function ContactPage() {\r\n  const { t } = useTranslation(\"common\");\r\n\r\n  const {\r\n    email,\r\n    subject,\r\n    message,\r\n    error,\r\n    successMessage,\r\n    isSubmitting,\r\n    setEmail,\r\n    setSubject,\r\n    setMessage,\r\n    handleSubmit,\r\n  } = useContactForm();\r\n\r\n  return (\r\n    <main className=\"contact-page layout-container\">\r\n      <h1>{t(\"contactModal.title\")}</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"email\">{t(\"contactModal.email\")}</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          disabled={isSubmitting}\r\n        />\r\n\r\n        <label htmlFor=\"subject\">{t(\"contactModal.subject\")}</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"subject\"\r\n          value={subject}\r\n          onChange={(e) => setSubject(e.target.value)}\r\n          disabled={isSubmitting}\r\n        />\r\n\r\n        <label htmlFor=\"message\">{t(\"contactModal.message\")}</label>\r\n        <textarea\r\n          id=\"message\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          disabled={isSubmitting}\r\n        />\r\n\r\n        {error && <p className=\"form-error\">{error}</p>}\r\n        {successMessage && <p className=\"form-success\">{successMessage}</p>}\r\n\r\n        <button type=\"submit\" disabled={isSubmitting}>\r\n          {isSubmitting ? t(\"contactModal.sending\") : t(\"contactModal.send\")}\r\n        </button>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AAHA;;;;;AAMe,SAAS;IACtB,MAAM,EAAE,CAAC,EAAE,GAAG,CAAA,GAAA,gKAAA,CAAA,iBAAc,AAAD,EAAE;IAE7B,MAAM,EACJ,KAAK,EACL,OAAO,EACP,OAAO,EACP,KAAK,EACL,cAAc,EACd,YAAY,EACZ,QAAQ,EACR,UAAU,EACV,UAAU,EACV,YAAY,EACb,GAAG,CAAA,GAAA,uHAAA,CAAA,iBAAc,AAAD;IAEjB,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC;0BAAI,EAAE;;;;;;0BACP,8OAAC;gBAAK,UAAU;;kCACd,8OAAC;wBAAM,SAAQ;kCAAS,EAAE;;;;;;kCAC1B,8OAAC;wBACC,MAAK;wBACL,IAAG;wBACH,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wBACxC,UAAU;;;;;;kCAGZ,8OAAC;wBAAM,SAAQ;kCAAW,EAAE;;;;;;kCAC5B,8OAAC;wBACC,MAAK;wBACL,IAAG;wBACH,OAAO;wBACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;wBAC1C,UAAU;;;;;;kCAGZ,8OAAC;wBAAM,SAAQ;kCAAW,EAAE;;;;;;kCAC5B,8OAAC;wBACC,IAAG;wBACH,OAAO;wBACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;wBAC1C,UAAU;;;;;;oBAGX,uBAAS,8OAAC;wBAAE,WAAU;kCAAc;;;;;;oBACpC,gCAAkB,8OAAC;wBAAE,WAAU;kCAAgB;;;;;;kCAEhD,8OAAC;wBAAO,MAAK;wBAAS,UAAU;kCAC7B,eAAe,EAAE,0BAA0B,EAAE;;;;;;;;;;;;;;;;;;AAKxD","debugId":null}}]
}